/*
Copyright 2024 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ColorsInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []SeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type ColorsObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []SeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type ColorsParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []SeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type ColorsSeriesOverridesInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type ColorsSeriesOverridesObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type ColorsSeriesOverridesParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type DashboardInitParameters struct {

	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	// The New Relic account ID where you want to create the dashboard.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Brief text describing the dashboard.
	// The dashboard's description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The title of the dashboard.
	// The dashboard's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// A nested block that describes a page. See Nested page blocks below for details.
	Page []PageInitParameters `json:"page,omitempty" tf:"page,omitempty"`

	// Determines who can see the dashboard in an account. Valid values are private, public_read_only, or public_read_write.  Defaults to public_read_only.
	// Determines who can see or edit the dashboard. Valid values are private, public_read_only, public_read_write. Defaults to public_read_only.
	Permissions *string `json:"permissions,omitempty" tf:"permissions,omitempty"`

	// A nested block that describes a dashboard-local variable. See Nested variable blocks below for details.
	// Dashboard-local variable definitions.
	Variable []VariableInitParameters `json:"variable,omitempty" tf:"variable,omitempty"`
}

type DashboardObservation struct {

	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	// The New Relic account ID where you want to create the dashboard.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Brief text describing the dashboard.
	// The dashboard's description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The unique entity identifier of the dashboard in New Relic.
	// The unique entity identifier of the dashboard in New Relic.
	GUID *string `json:"guid,omitempty" tf:"guid,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The title of the dashboard.
	// The dashboard's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// A nested block that describes a page. See Nested page blocks below for details.
	Page []PageObservation `json:"page,omitempty" tf:"page,omitempty"`

	// The URL for viewing the dashboard.
	// The URL of the dashboard.
	Permalink *string `json:"permalink,omitempty" tf:"permalink,omitempty"`

	// Determines who can see the dashboard in an account. Valid values are private, public_read_only, or public_read_write.  Defaults to public_read_only.
	// Determines who can see or edit the dashboard. Valid values are private, public_read_only, public_read_write. Defaults to public_read_only.
	Permissions *string `json:"permissions,omitempty" tf:"permissions,omitempty"`

	// A nested block that describes a dashboard-local variable. See Nested variable blocks below for details.
	// Dashboard-local variable definitions.
	Variable []VariableObservation `json:"variable,omitempty" tf:"variable,omitempty"`
}

type DashboardParameters struct {

	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	// The New Relic account ID where you want to create the dashboard.
	// +kubebuilder:validation:Optional
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Brief text describing the dashboard.
	// The dashboard's description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The title of the dashboard.
	// The dashboard's name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// A nested block that describes a page. See Nested page blocks below for details.
	// +kubebuilder:validation:Optional
	Page []PageParameters `json:"page,omitempty" tf:"page,omitempty"`

	// Determines who can see the dashboard in an account. Valid values are private, public_read_only, or public_read_write.  Defaults to public_read_only.
	// Determines who can see or edit the dashboard. Valid values are private, public_read_only, public_read_write. Defaults to public_read_only.
	// +kubebuilder:validation:Optional
	Permissions *string `json:"permissions,omitempty" tf:"permissions,omitempty"`

	// A nested block that describes a dashboard-local variable. See Nested variable blocks below for details.
	// Dashboard-local variable definitions.
	// +kubebuilder:validation:Optional
	Variable []VariableParameters `json:"variable,omitempty" tf:"variable,omitempty"`
}

type ItemInitParameters struct {

	// A title for the widget.
	// A human-friendly display string for this value.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A possible variable value
	// A possible variable value
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ItemObservation struct {

	// A title for the widget.
	// A human-friendly display string for this value.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A possible variable value
	// A possible variable value
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ItemParameters struct {

	// A title for the widget.
	// A human-friendly display string for this value.
	// +kubebuilder:validation:Optional
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A possible variable value
	// A possible variable value
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type NrqlQueryInitParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type NrqlQueryObservation struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type NrqlQueryParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	// +kubebuilder:validation:Optional
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	// +kubebuilder:validation:Optional
	Query *string `json:"query" tf:"query,omitempty"`
}

type NullValuesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []NullValuesSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type NullValuesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []NullValuesSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type NullValuesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []NullValuesSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type NullValuesSeriesOverridesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type NullValuesSeriesOverridesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type NullValuesSeriesOverridesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type OptionsInitParameters struct {

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	// Only applies to variables of type NRQL. With this turned on, the time range for the NRQL query will override the time picker on dashboards and other pages. Turn this off to use the time picker as normal.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`
}

type OptionsObservation struct {

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	// Only applies to variables of type NRQL. With this turned on, the time range for the NRQL query will override the time picker on dashboards and other pages. Turn this off to use the time picker as normal.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`
}

type OptionsParameters struct {

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	// Only applies to variables of type NRQL. With this turned on, the time range for the NRQL query will override the time picker on dashboards and other pages. Turn this off to use the time picker as normal.
	// +kubebuilder:validation:Optional
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`
}

type PageInitParameters struct {

	// Brief text describing the page.
	// The dashboard page's description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The name of the page. Note: If there is only one page, this name will be the name of the Dashboard.
	// The dashboard page's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// A nested block that describes an Area widget.  See Nested widget blocks below for details.
	// An area widget.
	WidgetArea []WidgetAreaInitParameters `json:"widgetArea,omitempty" tf:"widget_area,omitempty"`

	// A nested block that describes a Bar widget.  See Nested widget blocks below for details.
	// A bar widget.
	WidgetBar []WidgetBarInitParameters `json:"widgetBar,omitempty" tf:"widget_bar,omitempty"`

	// A nested block that describes a Billboard widget.  See Nested widget blocks below for details.
	// A billboard widget.
	WidgetBillboard []WidgetBillboardInitParameters `json:"widgetBillboard,omitempty" tf:"widget_billboard,omitempty"`

	// A nested block that describes a Bullet widget.  See Nested widget blocks below for details.
	// A bullet widget.
	WidgetBullet []WidgetBulletInitParameters `json:"widgetBullet,omitempty" tf:"widget_bullet,omitempty"`

	// A nested block that describes a Funnel widget.  See Nested widget blocks below for details.
	// A funnel widget.
	WidgetFunnel []WidgetFunnelInitParameters `json:"widgetFunnel,omitempty" tf:"widget_funnel,omitempty"`

	// A nested block that describes a Heatmap widget.  See Nested widget blocks below for details.
	// A heatmap widget.
	WidgetHeatmap []WidgetHeatmapInitParameters `json:"widgetHeatmap,omitempty" tf:"widget_heatmap,omitempty"`

	// A nested block that describes a Histogram widget.  See Nested widget blocks below for details.
	// A histogram widget.
	WidgetHistogram []WidgetHistogramInitParameters `json:"widgetHistogram,omitempty" tf:"widget_histogram,omitempty"`

	// A nested block that describes a JSON widget.  See Nested widget blocks below for details.
	// A JSON widget.
	WidgetJSON []WidgetJSONInitParameters `json:"widgetJson,omitempty" tf:"widget_json,omitempty"`

	// A nested block that describes a Line widget.  See Nested widget blocks below for details.
	// A line widget.
	WidgetLine []WidgetLineInitParameters `json:"widgetLine,omitempty" tf:"widget_line,omitempty"`

	// A nested block that describes a Log Table widget.  See Nested widget blocks below for details.
	// A log table widget.
	WidgetLogTable []WidgetLogTableInitParameters `json:"widgetLogTable,omitempty" tf:"widget_log_table,omitempty"`

	// A nested block that describes a Markdown widget.  See Nested widget blocks below for details.
	// A markdown widget.
	WidgetMarkdown []WidgetMarkdownInitParameters `json:"widgetMarkdown,omitempty" tf:"widget_markdown,omitempty"`

	// A nested block that describes a Pie widget.  See Nested widget blocks below for details.
	// A pie widget.
	WidgetPie []WidgetPieInitParameters `json:"widgetPie,omitempty" tf:"widget_pie,omitempty"`

	// A nested block that describes a Stacked Bar widget. See Nested widget blocks below for details.
	// A stacked bar widget.
	WidgetStackedBar []WidgetStackedBarInitParameters `json:"widgetStackedBar,omitempty" tf:"widget_stacked_bar,omitempty"`

	// A nested block that describes a Table widget.  See Nested widget blocks below for details.
	// A table widget.
	WidgetTable []WidgetTableInitParameters `json:"widgetTable,omitempty" tf:"widget_table,omitempty"`
}

type PageObservation struct {

	// Brief text describing the page.
	// The dashboard page's description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The unique entity identifier of the dashboard page in New Relic.
	// The unique entity identifier of the dashboard page in New Relic.
	GUID *string `json:"guid,omitempty" tf:"guid,omitempty"`

	// The name of the page. Note: If there is only one page, this name will be the name of the Dashboard.
	// The dashboard page's name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// A nested block that describes an Area widget.  See Nested widget blocks below for details.
	// An area widget.
	WidgetArea []WidgetAreaObservation `json:"widgetArea,omitempty" tf:"widget_area,omitempty"`

	// A nested block that describes a Bar widget.  See Nested widget blocks below for details.
	// A bar widget.
	WidgetBar []WidgetBarObservation `json:"widgetBar,omitempty" tf:"widget_bar,omitempty"`

	// A nested block that describes a Billboard widget.  See Nested widget blocks below for details.
	// A billboard widget.
	WidgetBillboard []WidgetBillboardObservation `json:"widgetBillboard,omitempty" tf:"widget_billboard,omitempty"`

	// A nested block that describes a Bullet widget.  See Nested widget blocks below for details.
	// A bullet widget.
	WidgetBullet []WidgetBulletObservation `json:"widgetBullet,omitempty" tf:"widget_bullet,omitempty"`

	// A nested block that describes a Funnel widget.  See Nested widget blocks below for details.
	// A funnel widget.
	WidgetFunnel []WidgetFunnelObservation `json:"widgetFunnel,omitempty" tf:"widget_funnel,omitempty"`

	// A nested block that describes a Heatmap widget.  See Nested widget blocks below for details.
	// A heatmap widget.
	WidgetHeatmap []WidgetHeatmapObservation `json:"widgetHeatmap,omitempty" tf:"widget_heatmap,omitempty"`

	// A nested block that describes a Histogram widget.  See Nested widget blocks below for details.
	// A histogram widget.
	WidgetHistogram []WidgetHistogramObservation `json:"widgetHistogram,omitempty" tf:"widget_histogram,omitempty"`

	// A nested block that describes a JSON widget.  See Nested widget blocks below for details.
	// A JSON widget.
	WidgetJSON []WidgetJSONObservation `json:"widgetJson,omitempty" tf:"widget_json,omitempty"`

	// A nested block that describes a Line widget.  See Nested widget blocks below for details.
	// A line widget.
	WidgetLine []WidgetLineObservation `json:"widgetLine,omitempty" tf:"widget_line,omitempty"`

	// A nested block that describes a Log Table widget.  See Nested widget blocks below for details.
	// A log table widget.
	WidgetLogTable []WidgetLogTableObservation `json:"widgetLogTable,omitempty" tf:"widget_log_table,omitempty"`

	// A nested block that describes a Markdown widget.  See Nested widget blocks below for details.
	// A markdown widget.
	WidgetMarkdown []WidgetMarkdownObservation `json:"widgetMarkdown,omitempty" tf:"widget_markdown,omitempty"`

	// A nested block that describes a Pie widget.  See Nested widget blocks below for details.
	// A pie widget.
	WidgetPie []WidgetPieObservation `json:"widgetPie,omitempty" tf:"widget_pie,omitempty"`

	// A nested block that describes a Stacked Bar widget. See Nested widget blocks below for details.
	// A stacked bar widget.
	WidgetStackedBar []WidgetStackedBarObservation `json:"widgetStackedBar,omitempty" tf:"widget_stacked_bar,omitempty"`

	// A nested block that describes a Table widget.  See Nested widget blocks below for details.
	// A table widget.
	WidgetTable []WidgetTableObservation `json:"widgetTable,omitempty" tf:"widget_table,omitempty"`
}

type PageParameters struct {

	// Brief text describing the page.
	// The dashboard page's description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The name of the page. Note: If there is only one page, this name will be the name of the Dashboard.
	// The dashboard page's name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// A nested block that describes an Area widget.  See Nested widget blocks below for details.
	// An area widget.
	// +kubebuilder:validation:Optional
	WidgetArea []WidgetAreaParameters `json:"widgetArea,omitempty" tf:"widget_area,omitempty"`

	// A nested block that describes a Bar widget.  See Nested widget blocks below for details.
	// A bar widget.
	// +kubebuilder:validation:Optional
	WidgetBar []WidgetBarParameters `json:"widgetBar,omitempty" tf:"widget_bar,omitempty"`

	// A nested block that describes a Billboard widget.  See Nested widget blocks below for details.
	// A billboard widget.
	// +kubebuilder:validation:Optional
	WidgetBillboard []WidgetBillboardParameters `json:"widgetBillboard,omitempty" tf:"widget_billboard,omitempty"`

	// A nested block that describes a Bullet widget.  See Nested widget blocks below for details.
	// A bullet widget.
	// +kubebuilder:validation:Optional
	WidgetBullet []WidgetBulletParameters `json:"widgetBullet,omitempty" tf:"widget_bullet,omitempty"`

	// A nested block that describes a Funnel widget.  See Nested widget blocks below for details.
	// A funnel widget.
	// +kubebuilder:validation:Optional
	WidgetFunnel []WidgetFunnelParameters `json:"widgetFunnel,omitempty" tf:"widget_funnel,omitempty"`

	// A nested block that describes a Heatmap widget.  See Nested widget blocks below for details.
	// A heatmap widget.
	// +kubebuilder:validation:Optional
	WidgetHeatmap []WidgetHeatmapParameters `json:"widgetHeatmap,omitempty" tf:"widget_heatmap,omitempty"`

	// A nested block that describes a Histogram widget.  See Nested widget blocks below for details.
	// A histogram widget.
	// +kubebuilder:validation:Optional
	WidgetHistogram []WidgetHistogramParameters `json:"widgetHistogram,omitempty" tf:"widget_histogram,omitempty"`

	// A nested block that describes a JSON widget.  See Nested widget blocks below for details.
	// A JSON widget.
	// +kubebuilder:validation:Optional
	WidgetJSON []WidgetJSONParameters `json:"widgetJson,omitempty" tf:"widget_json,omitempty"`

	// A nested block that describes a Line widget.  See Nested widget blocks below for details.
	// A line widget.
	// +kubebuilder:validation:Optional
	WidgetLine []WidgetLineParameters `json:"widgetLine,omitempty" tf:"widget_line,omitempty"`

	// A nested block that describes a Log Table widget.  See Nested widget blocks below for details.
	// A log table widget.
	// +kubebuilder:validation:Optional
	WidgetLogTable []WidgetLogTableParameters `json:"widgetLogTable,omitempty" tf:"widget_log_table,omitempty"`

	// A nested block that describes a Markdown widget.  See Nested widget blocks below for details.
	// A markdown widget.
	// +kubebuilder:validation:Optional
	WidgetMarkdown []WidgetMarkdownParameters `json:"widgetMarkdown,omitempty" tf:"widget_markdown,omitempty"`

	// A nested block that describes a Pie widget.  See Nested widget blocks below for details.
	// A pie widget.
	// +kubebuilder:validation:Optional
	WidgetPie []WidgetPieParameters `json:"widgetPie,omitempty" tf:"widget_pie,omitempty"`

	// A nested block that describes a Stacked Bar widget. See Nested widget blocks below for details.
	// A stacked bar widget.
	// +kubebuilder:validation:Optional
	WidgetStackedBar []WidgetStackedBarParameters `json:"widgetStackedBar,omitempty" tf:"widget_stacked_bar,omitempty"`

	// A nested block that describes a Table widget.  See Nested widget blocks below for details.
	// A table widget.
	// +kubebuilder:validation:Optional
	WidgetTable []WidgetTableParameters `json:"widgetTable,omitempty" tf:"widget_table,omitempty"`
}

type SeriesOverridesInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type SeriesOverridesObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type SeriesOverridesParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type ThresholdInitParameters struct {

	// The value 'from' which the threshold would need to be applied.
	// The number from which the range starts in thresholds.
	From *float64 `json:"from,omitempty" tf:"from,omitempty"`

	// The variable identifier.
	// Name of the threshold created.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The severity of the threshold, which would affect the visual appearance of the threshold (such as its color) accordingly. The value of this attribute would need to be one of the following - warning, severe, critical, success, unavailable which correspond to the severity labels Warning, Approaching critical, Critical, Good, Neutral in the dropdown that helps specify the severity of thresholds in line widgets in the UI, respectively.
	// Severity of the threshold, which would reflect in the widget, in the range of the threshold specified.
	Severity *string `json:"severity,omitempty" tf:"severity,omitempty"`

	// The value until which the threshold would need to be applied.
	// The number at which the range ends in thresholds.
	To *float64 `json:"to,omitempty" tf:"to,omitempty"`
}

type ThresholdObservation struct {

	// The value 'from' which the threshold would need to be applied.
	// The number from which the range starts in thresholds.
	From *float64 `json:"from,omitempty" tf:"from,omitempty"`

	// The variable identifier.
	// Name of the threshold created.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The severity of the threshold, which would affect the visual appearance of the threshold (such as its color) accordingly. The value of this attribute would need to be one of the following - warning, severe, critical, success, unavailable which correspond to the severity labels Warning, Approaching critical, Critical, Good, Neutral in the dropdown that helps specify the severity of thresholds in line widgets in the UI, respectively.
	// Severity of the threshold, which would reflect in the widget, in the range of the threshold specified.
	Severity *string `json:"severity,omitempty" tf:"severity,omitempty"`

	// The value until which the threshold would need to be applied.
	// The number at which the range ends in thresholds.
	To *float64 `json:"to,omitempty" tf:"to,omitempty"`
}

type ThresholdParameters struct {

	// The value 'from' which the threshold would need to be applied.
	// The number from which the range starts in thresholds.
	// +kubebuilder:validation:Optional
	From *float64 `json:"from,omitempty" tf:"from,omitempty"`

	// The variable identifier.
	// Name of the threshold created.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The severity of the threshold, which would affect the visual appearance of the threshold (such as its color) accordingly. The value of this attribute would need to be one of the following - warning, severe, critical, success, unavailable which correspond to the severity labels Warning, Approaching critical, Critical, Good, Neutral in the dropdown that helps specify the severity of thresholds in line widgets in the UI, respectively.
	// Severity of the threshold, which would reflect in the widget, in the range of the threshold specified.
	// +kubebuilder:validation:Optional
	Severity *string `json:"severity,omitempty" tf:"severity,omitempty"`

	// The value until which the threshold would need to be applied.
	// The number at which the range ends in thresholds.
	// +kubebuilder:validation:Optional
	To *float64 `json:"to,omitempty" tf:"to,omitempty"`
}

type UnitsInitParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []UnitsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type UnitsObservation struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []UnitsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type UnitsParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []UnitsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type UnitsSeriesOverridesInitParameters struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type UnitsSeriesOverridesObservation struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type UnitsSeriesOverridesParameters struct {

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type VariableInitParameters struct {

	// A list of default values for this variable. To select all default values, the appropriate value to be used with this argument would be ["*"].
	// Default values for this variable.
	DefaultValues []*string `json:"defaultValues,omitempty" tf:"default_values,omitempty"`

	// Indicates whether this variable supports multiple selection or not. Only applies to variables of type nrql or enum.
	// Indicates whether this variable supports multiple selection or not. Only applies to variables of type NRQL or ENUM.
	IsMultiSelection *bool `json:"isMultiSelection,omitempty" tf:"is_multi_selection,omitempty"`

	// List of possible values for variables of type enum. See Nested item blocks below for details.
	// List of possible values for variables of type ENUM
	Item []ItemInitParameters `json:"item,omitempty" tf:"item,omitempty"`

	// The variable identifier.
	// The variable identifier.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	// Configuration for variables of type NRQL.
	NrqlQuery []VariableNrqlQueryInitParameters `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// Specifies additional options to be added to dashboard variables. Supports the following nested attribute(s) -
	// Options applied to the variable.
	Options []OptionsInitParameters `json:"options,omitempty" tf:"options,omitempty"`

	// Indicates the strategy to apply when replacing a variable in a NRQL query. One of default, identifier, number or string.
	// Indicates the strategy to apply when replacing a variable in a NRQL query.
	ReplacementStrategy *string `json:"replacementStrategy,omitempty" tf:"replacement_strategy,omitempty"`

	// Human-friendly display string for this variable.
	// Human-friendly display string for this variable.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// Specifies the data type of the variable and where its possible values may come from. One of enum, nrql or string
	// Specifies the data type of the variable and where its possible values may come from.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type VariableNrqlQueryInitParameters struct {

	// New Relic account ID(s) to issue the query against.
	AccountIds []*float64 `json:"accountIds,omitempty" tf:"account_ids,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// NRQL formatted query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type VariableNrqlQueryObservation struct {

	// New Relic account ID(s) to issue the query against.
	AccountIds []*float64 `json:"accountIds,omitempty" tf:"account_ids,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// NRQL formatted query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type VariableNrqlQueryParameters struct {

	// New Relic account ID(s) to issue the query against.
	// +kubebuilder:validation:Optional
	AccountIds []*float64 `json:"accountIds,omitempty" tf:"account_ids,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// NRQL formatted query.
	// +kubebuilder:validation:Optional
	Query *string `json:"query" tf:"query,omitempty"`
}

type VariableObservation struct {

	// A list of default values for this variable. To select all default values, the appropriate value to be used with this argument would be ["*"].
	// Default values for this variable.
	DefaultValues []*string `json:"defaultValues,omitempty" tf:"default_values,omitempty"`

	// Indicates whether this variable supports multiple selection or not. Only applies to variables of type nrql or enum.
	// Indicates whether this variable supports multiple selection or not. Only applies to variables of type NRQL or ENUM.
	IsMultiSelection *bool `json:"isMultiSelection,omitempty" tf:"is_multi_selection,omitempty"`

	// List of possible values for variables of type enum. See Nested item blocks below for details.
	// List of possible values for variables of type ENUM
	Item []ItemObservation `json:"item,omitempty" tf:"item,omitempty"`

	// The variable identifier.
	// The variable identifier.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	// Configuration for variables of type NRQL.
	NrqlQuery []VariableNrqlQueryObservation `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// Specifies additional options to be added to dashboard variables. Supports the following nested attribute(s) -
	// Options applied to the variable.
	Options []OptionsObservation `json:"options,omitempty" tf:"options,omitempty"`

	// Indicates the strategy to apply when replacing a variable in a NRQL query. One of default, identifier, number or string.
	// Indicates the strategy to apply when replacing a variable in a NRQL query.
	ReplacementStrategy *string `json:"replacementStrategy,omitempty" tf:"replacement_strategy,omitempty"`

	// Human-friendly display string for this variable.
	// Human-friendly display string for this variable.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// Specifies the data type of the variable and where its possible values may come from. One of enum, nrql or string
	// Specifies the data type of the variable and where its possible values may come from.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type VariableParameters struct {

	// A list of default values for this variable. To select all default values, the appropriate value to be used with this argument would be ["*"].
	// Default values for this variable.
	// +kubebuilder:validation:Optional
	DefaultValues []*string `json:"defaultValues,omitempty" tf:"default_values,omitempty"`

	// Indicates whether this variable supports multiple selection or not. Only applies to variables of type nrql or enum.
	// Indicates whether this variable supports multiple selection or not. Only applies to variables of type NRQL or ENUM.
	// +kubebuilder:validation:Optional
	IsMultiSelection *bool `json:"isMultiSelection,omitempty" tf:"is_multi_selection,omitempty"`

	// List of possible values for variables of type enum. See Nested item blocks below for details.
	// List of possible values for variables of type ENUM
	// +kubebuilder:validation:Optional
	Item []ItemParameters `json:"item,omitempty" tf:"item,omitempty"`

	// The variable identifier.
	// The variable identifier.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	// Configuration for variables of type NRQL.
	// +kubebuilder:validation:Optional
	NrqlQuery []VariableNrqlQueryParameters `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// Specifies additional options to be added to dashboard variables. Supports the following nested attribute(s) -
	// Options applied to the variable.
	// +kubebuilder:validation:Optional
	Options []OptionsParameters `json:"options,omitempty" tf:"options,omitempty"`

	// Indicates the strategy to apply when replacing a variable in a NRQL query. One of default, identifier, number or string.
	// Indicates the strategy to apply when replacing a variable in a NRQL query.
	// +kubebuilder:validation:Optional
	ReplacementStrategy *string `json:"replacementStrategy" tf:"replacement_strategy,omitempty"`

	// Human-friendly display string for this variable.
	// Human-friendly display string for this variable.
	// +kubebuilder:validation:Optional
	Title *string `json:"title" tf:"title,omitempty"`

	// Specifies the data type of the variable and where its possible values may come from. One of enum, nrql or string
	// Specifies the data type of the variable and where its possible values may come from.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type WidgetAreaInitParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []ColorsInitParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []NrqlQueryInitParameters `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []NullValuesInitParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []UnitsInitParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetAreaObservation struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []ColorsObservation `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// The ID of the widget.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []NrqlQueryObservation `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []NullValuesObservation `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []UnitsObservation `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetAreaParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	// +kubebuilder:validation:Optional
	Colors []ColorsParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Column *float64 `json:"column" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	// +kubebuilder:validation:Optional
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	// +kubebuilder:validation:Optional
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	// +kubebuilder:validation:Optional
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	// +kubebuilder:validation:Optional
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	// +kubebuilder:validation:Optional
	NrqlQuery []NrqlQueryParameters `json:"nrqlQuery" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	// +kubebuilder:validation:Optional
	NullValues []NullValuesParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Row *float64 `json:"row" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	// +kubebuilder:validation:Optional
	Title *string `json:"title" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	// +kubebuilder:validation:Optional
	Units []UnitsParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	// +kubebuilder:validation:Optional
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	// +kubebuilder:validation:Optional
	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	// +kubebuilder:validation:Optional
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetBarColorsInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []ColorsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetBarColorsObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []ColorsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetBarColorsParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []ColorsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetBarInitParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetBarColorsInitParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// :  Use this item to filter the current dashboard.
	// Use this item to filter the current dashboard
	FilterCurrentDashboard *bool `json:"filterCurrentDashboard,omitempty" tf:"filter_current_dashboard,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// :  Related entity GUIDs. Currently only supports Dashboard entity GUIDs.
	// Related entities. Currently only supports Dashboard entities, but may allow other cases in the future.
	LinkedEntityGuids []*string `json:"linkedEntityGuids,omitempty" tf:"linked_entity_guids,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []WidgetBarNrqlQueryInitParameters `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetBarNullValuesInitParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetBarUnitsInitParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetBarNrqlQueryInitParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type WidgetBarNrqlQueryObservation struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type WidgetBarNrqlQueryParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	// +kubebuilder:validation:Optional
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	// +kubebuilder:validation:Optional
	Query *string `json:"query" tf:"query,omitempty"`
}

type WidgetBarNullValuesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetBarNullValuesSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetBarNullValuesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetBarNullValuesSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetBarNullValuesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetBarNullValuesSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetBarNullValuesSeriesOverridesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetBarNullValuesSeriesOverridesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetBarNullValuesSeriesOverridesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetBarObservation struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetBarColorsObservation `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// :  Use this item to filter the current dashboard.
	// Use this item to filter the current dashboard
	FilterCurrentDashboard *bool `json:"filterCurrentDashboard,omitempty" tf:"filter_current_dashboard,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// The ID of the widget.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// :  Related entity GUIDs. Currently only supports Dashboard entity GUIDs.
	// Related entities. Currently only supports Dashboard entities, but may allow other cases in the future.
	LinkedEntityGuids []*string `json:"linkedEntityGuids,omitempty" tf:"linked_entity_guids,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []WidgetBarNrqlQueryObservation `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetBarNullValuesObservation `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetBarUnitsObservation `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetBarParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	// +kubebuilder:validation:Optional
	Colors []WidgetBarColorsParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Column *float64 `json:"column" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	// +kubebuilder:validation:Optional
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// :  Use this item to filter the current dashboard.
	// Use this item to filter the current dashboard
	// +kubebuilder:validation:Optional
	FilterCurrentDashboard *bool `json:"filterCurrentDashboard,omitempty" tf:"filter_current_dashboard,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	// +kubebuilder:validation:Optional
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	// +kubebuilder:validation:Optional
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	// +kubebuilder:validation:Optional
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// :  Related entity GUIDs. Currently only supports Dashboard entity GUIDs.
	// Related entities. Currently only supports Dashboard entities, but may allow other cases in the future.
	// +kubebuilder:validation:Optional
	LinkedEntityGuids []*string `json:"linkedEntityGuids,omitempty" tf:"linked_entity_guids,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	// +kubebuilder:validation:Optional
	NrqlQuery []WidgetBarNrqlQueryParameters `json:"nrqlQuery" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	// +kubebuilder:validation:Optional
	NullValues []WidgetBarNullValuesParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Row *float64 `json:"row" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	// +kubebuilder:validation:Optional
	Title *string `json:"title" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	// +kubebuilder:validation:Optional
	Units []WidgetBarUnitsParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	// +kubebuilder:validation:Optional
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	// +kubebuilder:validation:Optional
	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	// +kubebuilder:validation:Optional
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetBarUnitsInitParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetBarUnitsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetBarUnitsObservation struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetBarUnitsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetBarUnitsParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetBarUnitsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetBarUnitsSeriesOverridesInitParameters struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetBarUnitsSeriesOverridesObservation struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetBarUnitsSeriesOverridesParameters struct {

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetBillboardColorsInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetBillboardColorsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetBillboardColorsObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetBillboardColorsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetBillboardColorsParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetBillboardColorsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetBillboardColorsSeriesOverridesInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetBillboardColorsSeriesOverridesObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetBillboardColorsSeriesOverridesParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetBillboardInitParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetBillboardColorsInitParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Threshold above which the displayed value will be styled with a red color.
	// The critical threshold value.
	Critical *string `json:"critical,omitempty" tf:"critical,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []WidgetBillboardNrqlQueryInitParameters `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetBillboardNullValuesInitParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetBillboardUnitsInitParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Threshold above which the displayed value will be styled with a yellow color.
	// The warning threshold value.
	Warning *string `json:"warning,omitempty" tf:"warning,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetBillboardNrqlQueryInitParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type WidgetBillboardNrqlQueryObservation struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type WidgetBillboardNrqlQueryParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	// +kubebuilder:validation:Optional
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	// +kubebuilder:validation:Optional
	Query *string `json:"query" tf:"query,omitempty"`
}

type WidgetBillboardNullValuesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetBillboardNullValuesSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetBillboardNullValuesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetBillboardNullValuesSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetBillboardNullValuesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetBillboardNullValuesSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetBillboardNullValuesSeriesOverridesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetBillboardNullValuesSeriesOverridesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetBillboardNullValuesSeriesOverridesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetBillboardObservation struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetBillboardColorsObservation `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Threshold above which the displayed value will be styled with a red color.
	// The critical threshold value.
	Critical *string `json:"critical,omitempty" tf:"critical,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// The ID of the widget.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []WidgetBillboardNrqlQueryObservation `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetBillboardNullValuesObservation `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetBillboardUnitsObservation `json:"units,omitempty" tf:"units,omitempty"`

	// Threshold above which the displayed value will be styled with a yellow color.
	// The warning threshold value.
	Warning *string `json:"warning,omitempty" tf:"warning,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetBillboardParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	// +kubebuilder:validation:Optional
	Colors []WidgetBillboardColorsParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Column *float64 `json:"column" tf:"column,omitempty"`

	// Threshold above which the displayed value will be styled with a red color.
	// The critical threshold value.
	// +kubebuilder:validation:Optional
	Critical *string `json:"critical,omitempty" tf:"critical,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	// +kubebuilder:validation:Optional
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	// +kubebuilder:validation:Optional
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	// +kubebuilder:validation:Optional
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	// +kubebuilder:validation:Optional
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	// +kubebuilder:validation:Optional
	NrqlQuery []WidgetBillboardNrqlQueryParameters `json:"nrqlQuery" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	// +kubebuilder:validation:Optional
	NullValues []WidgetBillboardNullValuesParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Row *float64 `json:"row" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	// +kubebuilder:validation:Optional
	Title *string `json:"title" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	// +kubebuilder:validation:Optional
	Units []WidgetBillboardUnitsParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Threshold above which the displayed value will be styled with a yellow color.
	// The warning threshold value.
	// +kubebuilder:validation:Optional
	Warning *string `json:"warning,omitempty" tf:"warning,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	// +kubebuilder:validation:Optional
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	// +kubebuilder:validation:Optional
	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	// +kubebuilder:validation:Optional
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetBillboardUnitsInitParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetBillboardUnitsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetBillboardUnitsObservation struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetBillboardUnitsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetBillboardUnitsParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetBillboardUnitsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetBillboardUnitsSeriesOverridesInitParameters struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetBillboardUnitsSeriesOverridesObservation struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetBillboardUnitsSeriesOverridesParameters struct {

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetBulletColorsInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetBulletColorsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetBulletColorsObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetBulletColorsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetBulletColorsParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetBulletColorsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetBulletColorsSeriesOverridesInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetBulletColorsSeriesOverridesObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetBulletColorsSeriesOverridesParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetBulletInitParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetBulletColorsInitParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Visualization limit for the widget.
	// The maximum value for the visualization
	Limit *float64 `json:"limit,omitempty" tf:"limit,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []WidgetBulletNrqlQueryInitParameters `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetBulletNullValuesInitParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetBulletUnitsInitParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetBulletNrqlQueryInitParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type WidgetBulletNrqlQueryObservation struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type WidgetBulletNrqlQueryParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	// +kubebuilder:validation:Optional
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	// +kubebuilder:validation:Optional
	Query *string `json:"query" tf:"query,omitempty"`
}

type WidgetBulletNullValuesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetBulletNullValuesSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetBulletNullValuesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetBulletNullValuesSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetBulletNullValuesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetBulletNullValuesSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetBulletNullValuesSeriesOverridesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetBulletNullValuesSeriesOverridesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetBulletNullValuesSeriesOverridesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetBulletObservation struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetBulletColorsObservation `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// The ID of the widget.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Visualization limit for the widget.
	// The maximum value for the visualization
	Limit *float64 `json:"limit,omitempty" tf:"limit,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []WidgetBulletNrqlQueryObservation `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetBulletNullValuesObservation `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetBulletUnitsObservation `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetBulletParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	// +kubebuilder:validation:Optional
	Colors []WidgetBulletColorsParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Column *float64 `json:"column" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	// +kubebuilder:validation:Optional
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	// +kubebuilder:validation:Optional
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	// +kubebuilder:validation:Optional
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	// +kubebuilder:validation:Optional
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Visualization limit for the widget.
	// The maximum value for the visualization
	// +kubebuilder:validation:Optional
	Limit *float64 `json:"limit" tf:"limit,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	// +kubebuilder:validation:Optional
	NrqlQuery []WidgetBulletNrqlQueryParameters `json:"nrqlQuery" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	// +kubebuilder:validation:Optional
	NullValues []WidgetBulletNullValuesParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Row *float64 `json:"row" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	// +kubebuilder:validation:Optional
	Title *string `json:"title" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	// +kubebuilder:validation:Optional
	Units []WidgetBulletUnitsParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	// +kubebuilder:validation:Optional
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	// +kubebuilder:validation:Optional
	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	// +kubebuilder:validation:Optional
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetBulletUnitsInitParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetBulletUnitsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetBulletUnitsObservation struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetBulletUnitsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetBulletUnitsParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetBulletUnitsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetBulletUnitsSeriesOverridesInitParameters struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetBulletUnitsSeriesOverridesObservation struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetBulletUnitsSeriesOverridesParameters struct {

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetFunnelColorsInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetFunnelColorsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetFunnelColorsObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetFunnelColorsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetFunnelColorsParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetFunnelColorsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetFunnelColorsSeriesOverridesInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetFunnelColorsSeriesOverridesObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetFunnelColorsSeriesOverridesParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetFunnelInitParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetFunnelColorsInitParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []WidgetFunnelNrqlQueryInitParameters `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetFunnelNullValuesInitParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetFunnelUnitsInitParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetFunnelNrqlQueryInitParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type WidgetFunnelNrqlQueryObservation struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type WidgetFunnelNrqlQueryParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	// +kubebuilder:validation:Optional
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	// +kubebuilder:validation:Optional
	Query *string `json:"query" tf:"query,omitempty"`
}

type WidgetFunnelNullValuesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetFunnelNullValuesSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetFunnelNullValuesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetFunnelNullValuesSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetFunnelNullValuesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetFunnelNullValuesSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetFunnelNullValuesSeriesOverridesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetFunnelNullValuesSeriesOverridesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetFunnelNullValuesSeriesOverridesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetFunnelObservation struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetFunnelColorsObservation `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// The ID of the widget.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []WidgetFunnelNrqlQueryObservation `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetFunnelNullValuesObservation `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetFunnelUnitsObservation `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetFunnelParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	// +kubebuilder:validation:Optional
	Colors []WidgetFunnelColorsParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Column *float64 `json:"column" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	// +kubebuilder:validation:Optional
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	// +kubebuilder:validation:Optional
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	// +kubebuilder:validation:Optional
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	// +kubebuilder:validation:Optional
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	// +kubebuilder:validation:Optional
	NrqlQuery []WidgetFunnelNrqlQueryParameters `json:"nrqlQuery" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	// +kubebuilder:validation:Optional
	NullValues []WidgetFunnelNullValuesParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Row *float64 `json:"row" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	// +kubebuilder:validation:Optional
	Title *string `json:"title" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	// +kubebuilder:validation:Optional
	Units []WidgetFunnelUnitsParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	// +kubebuilder:validation:Optional
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	// +kubebuilder:validation:Optional
	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	// +kubebuilder:validation:Optional
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetFunnelUnitsInitParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetFunnelUnitsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetFunnelUnitsObservation struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetFunnelUnitsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetFunnelUnitsParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetFunnelUnitsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetFunnelUnitsSeriesOverridesInitParameters struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetFunnelUnitsSeriesOverridesObservation struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetFunnelUnitsSeriesOverridesParameters struct {

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetHeatmapColorsInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetHeatmapColorsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetHeatmapColorsObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetHeatmapColorsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetHeatmapColorsParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetHeatmapColorsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetHeatmapColorsSeriesOverridesInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetHeatmapColorsSeriesOverridesObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetHeatmapColorsSeriesOverridesParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetHeatmapInitParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetHeatmapColorsInitParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// :  Use this item to filter the current dashboard.
	// Use this item to filter the current dashboard
	FilterCurrentDashboard *bool `json:"filterCurrentDashboard,omitempty" tf:"filter_current_dashboard,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// :  Related entity GUIDs. Currently only supports Dashboard entity GUIDs.
	// Related entities. Currently only supports Dashboard entities, but may allow other cases in the future.
	LinkedEntityGuids []*string `json:"linkedEntityGuids,omitempty" tf:"linked_entity_guids,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []WidgetHeatmapNrqlQueryInitParameters `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetHeatmapNullValuesInitParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetHeatmapUnitsInitParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetHeatmapNrqlQueryInitParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type WidgetHeatmapNrqlQueryObservation struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type WidgetHeatmapNrqlQueryParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	// +kubebuilder:validation:Optional
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	// +kubebuilder:validation:Optional
	Query *string `json:"query" tf:"query,omitempty"`
}

type WidgetHeatmapNullValuesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetHeatmapNullValuesSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetHeatmapNullValuesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetHeatmapNullValuesSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetHeatmapNullValuesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetHeatmapNullValuesSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetHeatmapNullValuesSeriesOverridesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetHeatmapNullValuesSeriesOverridesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetHeatmapNullValuesSeriesOverridesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetHeatmapObservation struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetHeatmapColorsObservation `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// :  Use this item to filter the current dashboard.
	// Use this item to filter the current dashboard
	FilterCurrentDashboard *bool `json:"filterCurrentDashboard,omitempty" tf:"filter_current_dashboard,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// The ID of the widget.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// :  Related entity GUIDs. Currently only supports Dashboard entity GUIDs.
	// Related entities. Currently only supports Dashboard entities, but may allow other cases in the future.
	LinkedEntityGuids []*string `json:"linkedEntityGuids,omitempty" tf:"linked_entity_guids,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []WidgetHeatmapNrqlQueryObservation `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetHeatmapNullValuesObservation `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetHeatmapUnitsObservation `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetHeatmapParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	// +kubebuilder:validation:Optional
	Colors []WidgetHeatmapColorsParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Column *float64 `json:"column" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	// +kubebuilder:validation:Optional
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// :  Use this item to filter the current dashboard.
	// Use this item to filter the current dashboard
	// +kubebuilder:validation:Optional
	FilterCurrentDashboard *bool `json:"filterCurrentDashboard,omitempty" tf:"filter_current_dashboard,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	// +kubebuilder:validation:Optional
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	// +kubebuilder:validation:Optional
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	// +kubebuilder:validation:Optional
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// :  Related entity GUIDs. Currently only supports Dashboard entity GUIDs.
	// Related entities. Currently only supports Dashboard entities, but may allow other cases in the future.
	// +kubebuilder:validation:Optional
	LinkedEntityGuids []*string `json:"linkedEntityGuids,omitempty" tf:"linked_entity_guids,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	// +kubebuilder:validation:Optional
	NrqlQuery []WidgetHeatmapNrqlQueryParameters `json:"nrqlQuery" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	// +kubebuilder:validation:Optional
	NullValues []WidgetHeatmapNullValuesParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Row *float64 `json:"row" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	// +kubebuilder:validation:Optional
	Title *string `json:"title" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	// +kubebuilder:validation:Optional
	Units []WidgetHeatmapUnitsParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	// +kubebuilder:validation:Optional
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	// +kubebuilder:validation:Optional
	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	// +kubebuilder:validation:Optional
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetHeatmapUnitsInitParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetHeatmapUnitsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetHeatmapUnitsObservation struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetHeatmapUnitsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetHeatmapUnitsParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetHeatmapUnitsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetHeatmapUnitsSeriesOverridesInitParameters struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetHeatmapUnitsSeriesOverridesObservation struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetHeatmapUnitsSeriesOverridesParameters struct {

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetHistogramColorsInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetHistogramColorsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetHistogramColorsObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetHistogramColorsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetHistogramColorsParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetHistogramColorsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetHistogramColorsSeriesOverridesInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetHistogramColorsSeriesOverridesObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetHistogramColorsSeriesOverridesParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetHistogramInitParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetHistogramColorsInitParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []WidgetHistogramNrqlQueryInitParameters `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetHistogramNullValuesInitParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetHistogramUnitsInitParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetHistogramNrqlQueryInitParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type WidgetHistogramNrqlQueryObservation struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type WidgetHistogramNrqlQueryParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	// +kubebuilder:validation:Optional
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	// +kubebuilder:validation:Optional
	Query *string `json:"query" tf:"query,omitempty"`
}

type WidgetHistogramNullValuesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetHistogramNullValuesSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetHistogramNullValuesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetHistogramNullValuesSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetHistogramNullValuesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetHistogramNullValuesSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetHistogramNullValuesSeriesOverridesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetHistogramNullValuesSeriesOverridesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetHistogramNullValuesSeriesOverridesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetHistogramObservation struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetHistogramColorsObservation `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// The ID of the widget.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []WidgetHistogramNrqlQueryObservation `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetHistogramNullValuesObservation `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetHistogramUnitsObservation `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetHistogramParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	// +kubebuilder:validation:Optional
	Colors []WidgetHistogramColorsParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Column *float64 `json:"column" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	// +kubebuilder:validation:Optional
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	// +kubebuilder:validation:Optional
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	// +kubebuilder:validation:Optional
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	// +kubebuilder:validation:Optional
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	// +kubebuilder:validation:Optional
	NrqlQuery []WidgetHistogramNrqlQueryParameters `json:"nrqlQuery" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	// +kubebuilder:validation:Optional
	NullValues []WidgetHistogramNullValuesParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Row *float64 `json:"row" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	// +kubebuilder:validation:Optional
	Title *string `json:"title" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	// +kubebuilder:validation:Optional
	Units []WidgetHistogramUnitsParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	// +kubebuilder:validation:Optional
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	// +kubebuilder:validation:Optional
	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	// +kubebuilder:validation:Optional
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetHistogramUnitsInitParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetHistogramUnitsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetHistogramUnitsObservation struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetHistogramUnitsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetHistogramUnitsParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetHistogramUnitsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetHistogramUnitsSeriesOverridesInitParameters struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetHistogramUnitsSeriesOverridesObservation struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetHistogramUnitsSeriesOverridesParameters struct {

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetJSONColorsInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetJSONColorsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetJSONColorsObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetJSONColorsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetJSONColorsParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetJSONColorsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetJSONColorsSeriesOverridesInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetJSONColorsSeriesOverridesObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetJSONColorsSeriesOverridesParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetJSONInitParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetJSONColorsInitParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []WidgetJSONNrqlQueryInitParameters `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetJSONNullValuesInitParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetJSONUnitsInitParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetJSONNrqlQueryInitParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type WidgetJSONNrqlQueryObservation struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type WidgetJSONNrqlQueryParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	// +kubebuilder:validation:Optional
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	// +kubebuilder:validation:Optional
	Query *string `json:"query" tf:"query,omitempty"`
}

type WidgetJSONNullValuesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetJSONNullValuesSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetJSONNullValuesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetJSONNullValuesSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetJSONNullValuesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetJSONNullValuesSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetJSONNullValuesSeriesOverridesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetJSONNullValuesSeriesOverridesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetJSONNullValuesSeriesOverridesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetJSONObservation struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetJSONColorsObservation `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// The ID of the widget.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []WidgetJSONNrqlQueryObservation `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetJSONNullValuesObservation `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetJSONUnitsObservation `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetJSONParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	// +kubebuilder:validation:Optional
	Colors []WidgetJSONColorsParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Column *float64 `json:"column" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	// +kubebuilder:validation:Optional
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	// +kubebuilder:validation:Optional
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	// +kubebuilder:validation:Optional
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	// +kubebuilder:validation:Optional
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	// +kubebuilder:validation:Optional
	NrqlQuery []WidgetJSONNrqlQueryParameters `json:"nrqlQuery" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	// +kubebuilder:validation:Optional
	NullValues []WidgetJSONNullValuesParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Row *float64 `json:"row" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	// +kubebuilder:validation:Optional
	Title *string `json:"title" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	// +kubebuilder:validation:Optional
	Units []WidgetJSONUnitsParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	// +kubebuilder:validation:Optional
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	// +kubebuilder:validation:Optional
	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	// +kubebuilder:validation:Optional
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetJSONUnitsInitParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetJSONUnitsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetJSONUnitsObservation struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetJSONUnitsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetJSONUnitsParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetJSONUnitsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetJSONUnitsSeriesOverridesInitParameters struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetJSONUnitsSeriesOverridesObservation struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetJSONUnitsSeriesOverridesParameters struct {

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetLineColorsInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetLineColorsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetLineColorsObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetLineColorsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetLineColorsParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetLineColorsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetLineColorsSeriesOverridesInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetLineColorsSeriesOverridesObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetLineColorsSeriesOverridesParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetLineInitParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetLineColorsInitParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// A boolean value, which when true, sets the label to be visibly displayed within thresholds. In other words, if this attribute is set to true, the label always visible toggle in the Thresholds section in the settings of the widget is enabled.
	// Specified if the label should be visible in the graph created when specified with thresholds.
	IsLabelVisible *bool `json:"isLabelVisible,omitempty" tf:"is_label_visible,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []WidgetLineNrqlQueryInitParameters `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetLineNullValuesInitParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// An attribute that helps specify multiple thresholds, each inclusive of a range of values between which the threshold would need to function, the name of the threshold and its severity. Multiple thresholds can be defined in a line widget. The threshold attribute requires specifying the following attributes in a nested block -
	Threshold []ThresholdInitParameters `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetLineUnitsInitParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`

	// An attribute that specifies if the values on the graph to be rendered need to be fit to scale, or printed within the specified range from y_axis_left_min (or 0 if it is not defined) to y_axis_left_max. Use y_axis_left_zero = true with a combination of y_axis_left_min and y_axis_left_max to render values from 0 or the specified minimum to the maximum, and y_axis_left_zero = false to fit the graph to scale.
	// Specifies if the values on the graph to be rendered need to be fit to scale, or printed within the specified range.
	YAxisLeftZero *bool `json:"yAxisLeftZero,omitempty" tf:"y_axis_left_zero,omitempty"`

	// An attribute which helps specify the configuration of the Y-Axis displayed on the right side of the line widget. This is a nested block, which includes the following attributes:
	YAxisRight []YAxisRightInitParameters `json:"yAxisRight,omitempty" tf:"y_axis_right,omitempty"`
}

type WidgetLineNrqlQueryInitParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type WidgetLineNrqlQueryObservation struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type WidgetLineNrqlQueryParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	// +kubebuilder:validation:Optional
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	// +kubebuilder:validation:Optional
	Query *string `json:"query" tf:"query,omitempty"`
}

type WidgetLineNullValuesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetLineNullValuesSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetLineNullValuesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetLineNullValuesSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetLineNullValuesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetLineNullValuesSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetLineNullValuesSeriesOverridesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetLineNullValuesSeriesOverridesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetLineNullValuesSeriesOverridesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetLineObservation struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetLineColorsObservation `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// The ID of the widget.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// A boolean value, which when true, sets the label to be visibly displayed within thresholds. In other words, if this attribute is set to true, the label always visible toggle in the Thresholds section in the settings of the widget is enabled.
	// Specified if the label should be visible in the graph created when specified with thresholds.
	IsLabelVisible *bool `json:"isLabelVisible,omitempty" tf:"is_label_visible,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []WidgetLineNrqlQueryObservation `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetLineNullValuesObservation `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// An attribute that helps specify multiple thresholds, each inclusive of a range of values between which the threshold would need to function, the name of the threshold and its severity. Multiple thresholds can be defined in a line widget. The threshold attribute requires specifying the following attributes in a nested block -
	Threshold []ThresholdObservation `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetLineUnitsObservation `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`

	// An attribute that specifies if the values on the graph to be rendered need to be fit to scale, or printed within the specified range from y_axis_left_min (or 0 if it is not defined) to y_axis_left_max. Use y_axis_left_zero = true with a combination of y_axis_left_min and y_axis_left_max to render values from 0 or the specified minimum to the maximum, and y_axis_left_zero = false to fit the graph to scale.
	// Specifies if the values on the graph to be rendered need to be fit to scale, or printed within the specified range.
	YAxisLeftZero *bool `json:"yAxisLeftZero,omitempty" tf:"y_axis_left_zero,omitempty"`

	// An attribute which helps specify the configuration of the Y-Axis displayed on the right side of the line widget. This is a nested block, which includes the following attributes:
	YAxisRight []YAxisRightObservation `json:"yAxisRight,omitempty" tf:"y_axis_right,omitempty"`
}

type WidgetLineParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	// +kubebuilder:validation:Optional
	Colors []WidgetLineColorsParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Column *float64 `json:"column" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	// +kubebuilder:validation:Optional
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	// +kubebuilder:validation:Optional
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	// +kubebuilder:validation:Optional
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// A boolean value, which when true, sets the label to be visibly displayed within thresholds. In other words, if this attribute is set to true, the label always visible toggle in the Thresholds section in the settings of the widget is enabled.
	// Specified if the label should be visible in the graph created when specified with thresholds.
	// +kubebuilder:validation:Optional
	IsLabelVisible *bool `json:"isLabelVisible,omitempty" tf:"is_label_visible,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	// +kubebuilder:validation:Optional
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	// +kubebuilder:validation:Optional
	NrqlQuery []WidgetLineNrqlQueryParameters `json:"nrqlQuery" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	// +kubebuilder:validation:Optional
	NullValues []WidgetLineNullValuesParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Row *float64 `json:"row" tf:"row,omitempty"`

	// An attribute that helps specify multiple thresholds, each inclusive of a range of values between which the threshold would need to function, the name of the threshold and its severity. Multiple thresholds can be defined in a line widget. The threshold attribute requires specifying the following attributes in a nested block -
	// +kubebuilder:validation:Optional
	Threshold []ThresholdParameters `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// A title for the widget.
	// A title for the widget.
	// +kubebuilder:validation:Optional
	Title *string `json:"title" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	// +kubebuilder:validation:Optional
	Units []WidgetLineUnitsParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	// +kubebuilder:validation:Optional
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	// +kubebuilder:validation:Optional
	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	// +kubebuilder:validation:Optional
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`

	// An attribute that specifies if the values on the graph to be rendered need to be fit to scale, or printed within the specified range from y_axis_left_min (or 0 if it is not defined) to y_axis_left_max. Use y_axis_left_zero = true with a combination of y_axis_left_min and y_axis_left_max to render values from 0 or the specified minimum to the maximum, and y_axis_left_zero = false to fit the graph to scale.
	// Specifies if the values on the graph to be rendered need to be fit to scale, or printed within the specified range.
	// +kubebuilder:validation:Optional
	YAxisLeftZero *bool `json:"yAxisLeftZero,omitempty" tf:"y_axis_left_zero,omitempty"`

	// An attribute which helps specify the configuration of the Y-Axis displayed on the right side of the line widget. This is a nested block, which includes the following attributes:
	// +kubebuilder:validation:Optional
	YAxisRight []YAxisRightParameters `json:"yAxisRight,omitempty" tf:"y_axis_right,omitempty"`
}

type WidgetLineUnitsInitParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetLineUnitsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetLineUnitsObservation struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetLineUnitsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetLineUnitsParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetLineUnitsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetLineUnitsSeriesOverridesInitParameters struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetLineUnitsSeriesOverridesObservation struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetLineUnitsSeriesOverridesParameters struct {

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetLogTableColorsInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetLogTableColorsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetLogTableColorsObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetLogTableColorsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetLogTableColorsParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetLogTableColorsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetLogTableColorsSeriesOverridesInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetLogTableColorsSeriesOverridesObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetLogTableColorsSeriesOverridesParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetLogTableInitParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetLogTableColorsInitParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []WidgetLogTableNrqlQueryInitParameters `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetLogTableNullValuesInitParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetLogTableUnitsInitParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetLogTableNrqlQueryInitParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type WidgetLogTableNrqlQueryObservation struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type WidgetLogTableNrqlQueryParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	// +kubebuilder:validation:Optional
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	// +kubebuilder:validation:Optional
	Query *string `json:"query" tf:"query,omitempty"`
}

type WidgetLogTableNullValuesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetLogTableNullValuesSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetLogTableNullValuesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetLogTableNullValuesSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetLogTableNullValuesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetLogTableNullValuesSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetLogTableNullValuesSeriesOverridesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetLogTableNullValuesSeriesOverridesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetLogTableNullValuesSeriesOverridesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetLogTableObservation struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetLogTableColorsObservation `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// The ID of the widget.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []WidgetLogTableNrqlQueryObservation `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetLogTableNullValuesObservation `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetLogTableUnitsObservation `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetLogTableParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	// +kubebuilder:validation:Optional
	Colors []WidgetLogTableColorsParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Column *float64 `json:"column" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	// +kubebuilder:validation:Optional
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	// +kubebuilder:validation:Optional
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	// +kubebuilder:validation:Optional
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	// +kubebuilder:validation:Optional
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	// +kubebuilder:validation:Optional
	NrqlQuery []WidgetLogTableNrqlQueryParameters `json:"nrqlQuery" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	// +kubebuilder:validation:Optional
	NullValues []WidgetLogTableNullValuesParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Row *float64 `json:"row" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	// +kubebuilder:validation:Optional
	Title *string `json:"title" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	// +kubebuilder:validation:Optional
	Units []WidgetLogTableUnitsParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	// +kubebuilder:validation:Optional
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	// +kubebuilder:validation:Optional
	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	// +kubebuilder:validation:Optional
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetLogTableUnitsInitParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetLogTableUnitsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetLogTableUnitsObservation struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetLogTableUnitsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetLogTableUnitsParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetLogTableUnitsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetLogTableUnitsSeriesOverridesInitParameters struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetLogTableUnitsSeriesOverridesObservation struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetLogTableUnitsSeriesOverridesParameters struct {

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetMarkdownColorsInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetMarkdownColorsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetMarkdownColorsObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetMarkdownColorsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetMarkdownColorsParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetMarkdownColorsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetMarkdownColorsSeriesOverridesInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetMarkdownColorsSeriesOverridesObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetMarkdownColorsSeriesOverridesParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetMarkdownInitParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetMarkdownColorsInitParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetMarkdownNullValuesInitParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// The markdown source to be rendered in the widget.
	Text *string `json:"text,omitempty" tf:"text,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetMarkdownUnitsInitParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetMarkdownNullValuesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetMarkdownNullValuesSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetMarkdownNullValuesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetMarkdownNullValuesSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetMarkdownNullValuesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetMarkdownNullValuesSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetMarkdownNullValuesSeriesOverridesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetMarkdownNullValuesSeriesOverridesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetMarkdownNullValuesSeriesOverridesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetMarkdownObservation struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetMarkdownColorsObservation `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// The ID of the widget.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetMarkdownNullValuesObservation `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// The markdown source to be rendered in the widget.
	Text *string `json:"text,omitempty" tf:"text,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetMarkdownUnitsObservation `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetMarkdownParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	// +kubebuilder:validation:Optional
	Colors []WidgetMarkdownColorsParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Column *float64 `json:"column" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	// +kubebuilder:validation:Optional
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	// +kubebuilder:validation:Optional
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	// +kubebuilder:validation:Optional
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	// +kubebuilder:validation:Optional
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	// +kubebuilder:validation:Optional
	NullValues []WidgetMarkdownNullValuesParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Row *float64 `json:"row" tf:"row,omitempty"`

	// The markdown source to be rendered in the widget.
	// +kubebuilder:validation:Optional
	Text *string `json:"text" tf:"text,omitempty"`

	// A title for the widget.
	// A title for the widget.
	// +kubebuilder:validation:Optional
	Title *string `json:"title" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	// +kubebuilder:validation:Optional
	Units []WidgetMarkdownUnitsParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	// +kubebuilder:validation:Optional
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	// +kubebuilder:validation:Optional
	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	// +kubebuilder:validation:Optional
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetMarkdownUnitsInitParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetMarkdownUnitsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetMarkdownUnitsObservation struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetMarkdownUnitsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetMarkdownUnitsParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetMarkdownUnitsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetMarkdownUnitsSeriesOverridesInitParameters struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetMarkdownUnitsSeriesOverridesObservation struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetMarkdownUnitsSeriesOverridesParameters struct {

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetPieColorsInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetPieColorsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetPieColorsObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetPieColorsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetPieColorsParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetPieColorsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetPieColorsSeriesOverridesInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetPieColorsSeriesOverridesObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetPieColorsSeriesOverridesParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetPieInitParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetPieColorsInitParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// :  Use this item to filter the current dashboard.
	// Use this item to filter the current dashboard
	FilterCurrentDashboard *bool `json:"filterCurrentDashboard,omitempty" tf:"filter_current_dashboard,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// :  Related entity GUIDs. Currently only supports Dashboard entity GUIDs.
	// Related entities. Currently only supports Dashboard entities, but may allow other cases in the future.
	LinkedEntityGuids []*string `json:"linkedEntityGuids,omitempty" tf:"linked_entity_guids,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []WidgetPieNrqlQueryInitParameters `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetPieNullValuesInitParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetPieUnitsInitParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetPieNrqlQueryInitParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type WidgetPieNrqlQueryObservation struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type WidgetPieNrqlQueryParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	// +kubebuilder:validation:Optional
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	// +kubebuilder:validation:Optional
	Query *string `json:"query" tf:"query,omitempty"`
}

type WidgetPieNullValuesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetPieNullValuesSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetPieNullValuesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetPieNullValuesSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetPieNullValuesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetPieNullValuesSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetPieNullValuesSeriesOverridesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetPieNullValuesSeriesOverridesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetPieNullValuesSeriesOverridesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetPieObservation struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetPieColorsObservation `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// :  Use this item to filter the current dashboard.
	// Use this item to filter the current dashboard
	FilterCurrentDashboard *bool `json:"filterCurrentDashboard,omitempty" tf:"filter_current_dashboard,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// The ID of the widget.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// :  Related entity GUIDs. Currently only supports Dashboard entity GUIDs.
	// Related entities. Currently only supports Dashboard entities, but may allow other cases in the future.
	LinkedEntityGuids []*string `json:"linkedEntityGuids,omitempty" tf:"linked_entity_guids,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []WidgetPieNrqlQueryObservation `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetPieNullValuesObservation `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetPieUnitsObservation `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetPieParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	// +kubebuilder:validation:Optional
	Colors []WidgetPieColorsParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Column *float64 `json:"column" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	// +kubebuilder:validation:Optional
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// :  Use this item to filter the current dashboard.
	// Use this item to filter the current dashboard
	// +kubebuilder:validation:Optional
	FilterCurrentDashboard *bool `json:"filterCurrentDashboard,omitempty" tf:"filter_current_dashboard,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	// +kubebuilder:validation:Optional
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	// +kubebuilder:validation:Optional
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	// +kubebuilder:validation:Optional
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// :  Related entity GUIDs. Currently only supports Dashboard entity GUIDs.
	// Related entities. Currently only supports Dashboard entities, but may allow other cases in the future.
	// +kubebuilder:validation:Optional
	LinkedEntityGuids []*string `json:"linkedEntityGuids,omitempty" tf:"linked_entity_guids,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	// +kubebuilder:validation:Optional
	NrqlQuery []WidgetPieNrqlQueryParameters `json:"nrqlQuery" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	// +kubebuilder:validation:Optional
	NullValues []WidgetPieNullValuesParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Row *float64 `json:"row" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	// +kubebuilder:validation:Optional
	Title *string `json:"title" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	// +kubebuilder:validation:Optional
	Units []WidgetPieUnitsParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	// +kubebuilder:validation:Optional
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	// +kubebuilder:validation:Optional
	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	// +kubebuilder:validation:Optional
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetPieUnitsInitParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetPieUnitsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetPieUnitsObservation struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetPieUnitsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetPieUnitsParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetPieUnitsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetPieUnitsSeriesOverridesInitParameters struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetPieUnitsSeriesOverridesObservation struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetPieUnitsSeriesOverridesParameters struct {

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetStackedBarColorsInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetStackedBarColorsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetStackedBarColorsObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetStackedBarColorsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetStackedBarColorsParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetStackedBarColorsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetStackedBarColorsSeriesOverridesInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetStackedBarColorsSeriesOverridesObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetStackedBarColorsSeriesOverridesParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetStackedBarInitParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetStackedBarColorsInitParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []WidgetStackedBarNrqlQueryInitParameters `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetStackedBarNullValuesInitParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetStackedBarUnitsInitParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetStackedBarNrqlQueryInitParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type WidgetStackedBarNrqlQueryObservation struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type WidgetStackedBarNrqlQueryParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	// +kubebuilder:validation:Optional
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	// +kubebuilder:validation:Optional
	Query *string `json:"query" tf:"query,omitempty"`
}

type WidgetStackedBarNullValuesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetStackedBarNullValuesSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetStackedBarNullValuesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetStackedBarNullValuesSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetStackedBarNullValuesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetStackedBarNullValuesSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetStackedBarNullValuesSeriesOverridesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetStackedBarNullValuesSeriesOverridesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetStackedBarNullValuesSeriesOverridesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetStackedBarObservation struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetStackedBarColorsObservation `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// The ID of the widget.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []WidgetStackedBarNrqlQueryObservation `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetStackedBarNullValuesObservation `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetStackedBarUnitsObservation `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetStackedBarParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	// +kubebuilder:validation:Optional
	Colors []WidgetStackedBarColorsParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Column *float64 `json:"column" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	// +kubebuilder:validation:Optional
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	// +kubebuilder:validation:Optional
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	// +kubebuilder:validation:Optional
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	// +kubebuilder:validation:Optional
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	// +kubebuilder:validation:Optional
	NrqlQuery []WidgetStackedBarNrqlQueryParameters `json:"nrqlQuery" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	// +kubebuilder:validation:Optional
	NullValues []WidgetStackedBarNullValuesParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Row *float64 `json:"row" tf:"row,omitempty"`

	// A title for the widget.
	// A title for the widget.
	// +kubebuilder:validation:Optional
	Title *string `json:"title" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	// +kubebuilder:validation:Optional
	Units []WidgetStackedBarUnitsParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	// +kubebuilder:validation:Optional
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	// +kubebuilder:validation:Optional
	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	// +kubebuilder:validation:Optional
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetStackedBarUnitsInitParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetStackedBarUnitsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetStackedBarUnitsObservation struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetStackedBarUnitsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetStackedBarUnitsParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetStackedBarUnitsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetStackedBarUnitsSeriesOverridesInitParameters struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetStackedBarUnitsSeriesOverridesObservation struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetStackedBarUnitsSeriesOverridesParameters struct {

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetTableColorsInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetTableColorsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetTableColorsObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetTableColorsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetTableColorsParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetTableColorsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetTableColorsSeriesOverridesInitParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetTableColorsSeriesOverridesObservation struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetTableColorsSeriesOverridesParameters struct {

	// Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	// Color code
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetTableInitParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetTableColorsInitParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// :  Use this item to filter the current dashboard.
	// Use this item to filter the current dashboard
	FilterCurrentDashboard *bool `json:"filterCurrentDashboard,omitempty" tf:"filter_current_dashboard,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// :  Related entity GUIDs. Currently only supports Dashboard entity GUIDs.
	// Related entities. Currently only supports Dashboard entities, but may allow other cases in the future.
	LinkedEntityGuids []*string `json:"linkedEntityGuids,omitempty" tf:"linked_entity_guids,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []WidgetTableNrqlQueryInitParameters `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetTableNullValuesInitParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// An attribute that helps specify multiple thresholds, each inclusive of a range of values between which the threshold would need to function, the name of the threshold and its severity. Multiple thresholds can be defined in a line widget. The threshold attribute requires specifying the following attributes in a nested block -
	Threshold []WidgetTableThresholdInitParameters `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetTableUnitsInitParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetTableNrqlQueryInitParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type WidgetTableNrqlQueryObservation struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type WidgetTableNrqlQueryParameters struct {

	// The New Relic account ID to issue the query against. Defaults to the Account ID where the dashboard was created. When using an account ID you don't have permissions for the widget will be replaced with a widget showing the data is inaccessible.
	// The account id used for the NRQL query.
	// +kubebuilder:validation:Optional
	AccountID *float64 `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Valid NRQL query string. See Writing NRQL Queries for help.
	// The NRQL query.
	// +kubebuilder:validation:Optional
	Query *string `json:"query" tf:"query,omitempty"`
}

type WidgetTableNullValuesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetTableNullValuesSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetTableNullValuesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetTableNullValuesSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetTableNullValuesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetTableNullValuesSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`
}

type WidgetTableNullValuesSeriesOverridesInitParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetTableNullValuesSeriesOverridesObservation struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetTableNullValuesSeriesOverridesParameters struct {

	// Choose an option in displaying null values. Accepted values are default, remove, preserve, or zero.
	// Null value
	// +kubebuilder:validation:Optional
	NullValue *string `json:"nullValue,omitempty" tf:"null_value,omitempty"`

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`
}

type WidgetTableObservation struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []WidgetTableColorsObservation `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	Column *float64 `json:"column,omitempty" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// :  Use this item to filter the current dashboard.
	// Use this item to filter the current dashboard
	FilterCurrentDashboard *bool `json:"filterCurrentDashboard,omitempty" tf:"filter_current_dashboard,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// The ID of the widget.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// :  Related entity GUIDs. Currently only supports Dashboard entity GUIDs.
	// Related entities. Currently only supports Dashboard entities, but may allow other cases in the future.
	LinkedEntityGuids []*string `json:"linkedEntityGuids,omitempty" tf:"linked_entity_guids,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	NrqlQuery []WidgetTableNrqlQueryObservation `json:"nrqlQuery,omitempty" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []WidgetTableNullValuesObservation `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	Row *float64 `json:"row,omitempty" tf:"row,omitempty"`

	// An attribute that helps specify multiple thresholds, each inclusive of a range of values between which the threshold would need to function, the name of the threshold and its severity. Multiple thresholds can be defined in a line widget. The threshold attribute requires specifying the following attributes in a nested block -
	Threshold []WidgetTableThresholdObservation `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// A title for the widget.
	// A title for the widget.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []WidgetTableUnitsObservation `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetTableParameters struct {

	// A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	// +kubebuilder:validation:Optional
	Colors []WidgetTableColorsParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// Column position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Column *float64 `json:"column" tf:"column,omitempty"`

	// Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to false
	// +kubebuilder:validation:Optional
	FacetShowOtherSeries *bool `json:"facetShowOtherSeries,omitempty" tf:"facet_show_other_series,omitempty"`

	// :  Use this item to filter the current dashboard.
	// Use this item to filter the current dashboard
	// +kubebuilder:validation:Optional
	FilterCurrentDashboard *bool `json:"filterCurrentDashboard,omitempty" tf:"filter_current_dashboard,omitempty"`

	// Height of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 3.
	// +kubebuilder:validation:Optional
	Height *float64 `json:"height,omitempty" tf:"height,omitempty"`

	// With this turned on, the time range in this query will override the time picker on dashboards and other pages. Defaults to false.
	// +kubebuilder:validation:Optional
	IgnoreTimeRange *bool `json:"ignoreTimeRange,omitempty" tf:"ignore_time_range,omitempty"`

	// With this turned on, the legend will be displayed. Defaults to true.
	// +kubebuilder:validation:Optional
	LegendEnabled *bool `json:"legendEnabled,omitempty" tf:"legend_enabled,omitempty"`

	// :  Related entity GUIDs. Currently only supports Dashboard entity GUIDs.
	// Related entities. Currently only supports Dashboard entities, but may allow other cases in the future.
	// +kubebuilder:validation:Optional
	LinkedEntityGuids []*string `json:"linkedEntityGuids,omitempty" tf:"linked_entity_guids,omitempty"`

	// Configuration for variables of type nrql. See Nested nrql_query blocks for details.
	// +kubebuilder:validation:Optional
	NrqlQuery []WidgetTableNrqlQueryParameters `json:"nrqlQuery" tf:"nrql_query,omitempty"`

	// A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	// +kubebuilder:validation:Optional
	NullValues []WidgetTableNullValuesParameters `json:"nullValues,omitempty" tf:"null_values,omitempty"`

	// Row position of widget from top left, starting at 1.
	// +kubebuilder:validation:Optional
	Row *float64 `json:"row" tf:"row,omitempty"`

	// An attribute that helps specify multiple thresholds, each inclusive of a range of values between which the threshold would need to function, the name of the threshold and its severity. Multiple thresholds can be defined in a line widget. The threshold attribute requires specifying the following attributes in a nested block -
	// +kubebuilder:validation:Optional
	Threshold []WidgetTableThresholdParameters `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// A title for the widget.
	// A title for the widget.
	// +kubebuilder:validation:Optional
	Title *string `json:"title" tf:"title,omitempty"`

	// A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	// +kubebuilder:validation:Optional
	Units []WidgetTableUnitsParameters `json:"units,omitempty" tf:"units,omitempty"`

	// Width of the widget.  Valid values are 1 to 12 inclusive.  Defaults to 4.
	// +kubebuilder:validation:Optional
	Width *float64 `json:"width,omitempty" tf:"width,omitempty"`

	// +kubebuilder:validation:Optional
	YAxisLeftMax *float64 `json:"yAxisLeftMax,omitempty" tf:"y_axis_left_max,omitempty"`

	// Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	// +kubebuilder:validation:Optional
	YAxisLeftMin *float64 `json:"yAxisLeftMin,omitempty" tf:"y_axis_left_min,omitempty"`
}

type WidgetTableThresholdInitParameters struct {

	// The name of the column in the table, to which the threshold would need to be applied.
	// Name of the column in the table, to which the threshold would be applied.
	ColumnName *string `json:"columnName,omitempty" tf:"column_name,omitempty"`

	// The value 'from' which the threshold would need to be applied.
	// The number from which the range starts in thresholds.
	From *float64 `json:"from,omitempty" tf:"from,omitempty"`

	// The severity of the threshold, which would affect the visual appearance of the threshold (such as its color) accordingly. The value of this attribute would need to be one of the following - warning, severe, critical, success, unavailable which correspond to the severity labels Warning, Approaching critical, Critical, Good, Neutral in the dropdown that helps specify the severity of thresholds in line widgets in the UI, respectively.
	// Severity of the threshold, which would reflect in the widget, in the range of the threshold specified.
	Severity *string `json:"severity,omitempty" tf:"severity,omitempty"`

	// The value until which the threshold would need to be applied.
	// The number at which the range ends in thresholds.
	To *float64 `json:"to,omitempty" tf:"to,omitempty"`
}

type WidgetTableThresholdObservation struct {

	// The name of the column in the table, to which the threshold would need to be applied.
	// Name of the column in the table, to which the threshold would be applied.
	ColumnName *string `json:"columnName,omitempty" tf:"column_name,omitempty"`

	// The value 'from' which the threshold would need to be applied.
	// The number from which the range starts in thresholds.
	From *float64 `json:"from,omitempty" tf:"from,omitempty"`

	// The severity of the threshold, which would affect the visual appearance of the threshold (such as its color) accordingly. The value of this attribute would need to be one of the following - warning, severe, critical, success, unavailable which correspond to the severity labels Warning, Approaching critical, Critical, Good, Neutral in the dropdown that helps specify the severity of thresholds in line widgets in the UI, respectively.
	// Severity of the threshold, which would reflect in the widget, in the range of the threshold specified.
	Severity *string `json:"severity,omitempty" tf:"severity,omitempty"`

	// The value until which the threshold would need to be applied.
	// The number at which the range ends in thresholds.
	To *float64 `json:"to,omitempty" tf:"to,omitempty"`
}

type WidgetTableThresholdParameters struct {

	// The name of the column in the table, to which the threshold would need to be applied.
	// Name of the column in the table, to which the threshold would be applied.
	// +kubebuilder:validation:Optional
	ColumnName *string `json:"columnName,omitempty" tf:"column_name,omitempty"`

	// The value 'from' which the threshold would need to be applied.
	// The number from which the range starts in thresholds.
	// +kubebuilder:validation:Optional
	From *float64 `json:"from,omitempty" tf:"from,omitempty"`

	// The severity of the threshold, which would affect the visual appearance of the threshold (such as its color) accordingly. The value of this attribute would need to be one of the following - warning, severe, critical, success, unavailable which correspond to the severity labels Warning, Approaching critical, Critical, Good, Neutral in the dropdown that helps specify the severity of thresholds in line widgets in the UI, respectively.
	// Severity of the threshold, which would reflect in the widget, in the range of the threshold specified.
	// +kubebuilder:validation:Optional
	Severity *string `json:"severity,omitempty" tf:"severity,omitempty"`

	// The value until which the threshold would need to be applied.
	// The number at which the range ends in thresholds.
	// +kubebuilder:validation:Optional
	To *float64 `json:"to,omitempty" tf:"to,omitempty"`
}

type WidgetTableUnitsInitParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetTableUnitsSeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetTableUnitsObservation struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	SeriesOverrides []WidgetTableUnitsSeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetTableUnitsParameters struct {

	// A Nested block which will take two string attributes null_value and series_name. This nested block is used to customize null values of individual.
	// +kubebuilder:validation:Optional
	SeriesOverrides []WidgetTableUnitsSeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetTableUnitsSeriesOverridesInitParameters struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetTableUnitsSeriesOverridesObservation struct {

	// The title of the dashboard.
	// Series name
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type WidgetTableUnitsSeriesOverridesParameters struct {

	// The title of the dashboard.
	// Series name
	// +kubebuilder:validation:Optional
	SeriesName *string `json:"seriesName,omitempty" tf:"series_name,omitempty"`

	// Choose a unit to customize the unit on your Y axis and in each of your series.
	// Unit name
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type YAxisRightInitParameters struct {

	// Minimum value of the range to be specified with the Y-Axis on the right of the line widget.
	YAxisRightMax *float64 `json:"yAxisRightMax,omitempty" tf:"y_axis_right_max,omitempty"`

	// Attributes which help specify a range of minimum and maximum values, which adjust the right Y axis to display the data within the specified minimum and maximum value for the axis.
	// Minimum value of the range to be specified with the Y-Axis on the right of the line widget.
	YAxisRightMin *float64 `json:"yAxisRightMin,omitempty" tf:"y_axis_right_min,omitempty"`

	// An attribute which takes a list of strings, specifying a selection of series' displayed in the line chart to be adjusted against the values of the right Y-axis.
	// A set of series that helps specify the Y-Axis on the right of the line widget.
	// +listType=set
	YAxisRightSeries []*string `json:"yAxisRightSeries,omitempty" tf:"y_axis_right_series,omitempty"`

	// An attribute that specifies if the values on the graph to be rendered need to be fit to scale, or printed within the specified range from y_axis_right_min (or 0 if it is not defined) to y_axis_right_max. Use y_axis_right_zero = true with a combination of y_axis_right_min and y_axis_right_max to render values from 0 or the specified minimum to the maximum, and y_axis_right_zero = false to fit the graph to scale.
	// An attribute that helps specify the Y-Axis on the right of the line widget.
	YAxisRightZero *bool `json:"yAxisRightZero,omitempty" tf:"y_axis_right_zero,omitempty"`
}

type YAxisRightObservation struct {

	// Minimum value of the range to be specified with the Y-Axis on the right of the line widget.
	YAxisRightMax *float64 `json:"yAxisRightMax,omitempty" tf:"y_axis_right_max,omitempty"`

	// Attributes which help specify a range of minimum and maximum values, which adjust the right Y axis to display the data within the specified minimum and maximum value for the axis.
	// Minimum value of the range to be specified with the Y-Axis on the right of the line widget.
	YAxisRightMin *float64 `json:"yAxisRightMin,omitempty" tf:"y_axis_right_min,omitempty"`

	// An attribute which takes a list of strings, specifying a selection of series' displayed in the line chart to be adjusted against the values of the right Y-axis.
	// A set of series that helps specify the Y-Axis on the right of the line widget.
	// +listType=set
	YAxisRightSeries []*string `json:"yAxisRightSeries,omitempty" tf:"y_axis_right_series,omitempty"`

	// An attribute that specifies if the values on the graph to be rendered need to be fit to scale, or printed within the specified range from y_axis_right_min (or 0 if it is not defined) to y_axis_right_max. Use y_axis_right_zero = true with a combination of y_axis_right_min and y_axis_right_max to render values from 0 or the specified minimum to the maximum, and y_axis_right_zero = false to fit the graph to scale.
	// An attribute that helps specify the Y-Axis on the right of the line widget.
	YAxisRightZero *bool `json:"yAxisRightZero,omitempty" tf:"y_axis_right_zero,omitempty"`
}

type YAxisRightParameters struct {

	// Minimum value of the range to be specified with the Y-Axis on the right of the line widget.
	// +kubebuilder:validation:Optional
	YAxisRightMax *float64 `json:"yAxisRightMax,omitempty" tf:"y_axis_right_max,omitempty"`

	// Attributes which help specify a range of minimum and maximum values, which adjust the right Y axis to display the data within the specified minimum and maximum value for the axis.
	// Minimum value of the range to be specified with the Y-Axis on the right of the line widget.
	// +kubebuilder:validation:Optional
	YAxisRightMin *float64 `json:"yAxisRightMin,omitempty" tf:"y_axis_right_min,omitempty"`

	// An attribute which takes a list of strings, specifying a selection of series' displayed in the line chart to be adjusted against the values of the right Y-axis.
	// A set of series that helps specify the Y-Axis on the right of the line widget.
	// +kubebuilder:validation:Optional
	// +listType=set
	YAxisRightSeries []*string `json:"yAxisRightSeries,omitempty" tf:"y_axis_right_series,omitempty"`

	// An attribute that specifies if the values on the graph to be rendered need to be fit to scale, or printed within the specified range from y_axis_right_min (or 0 if it is not defined) to y_axis_right_max. Use y_axis_right_zero = true with a combination of y_axis_right_min and y_axis_right_max to render values from 0 or the specified minimum to the maximum, and y_axis_right_zero = false to fit the graph to scale.
	// An attribute that helps specify the Y-Axis on the right of the line widget.
	// +kubebuilder:validation:Optional
	YAxisRightZero *bool `json:"yAxisRightZero,omitempty" tf:"y_axis_right_zero,omitempty"`
}

// DashboardSpec defines the desired state of Dashboard
type DashboardSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DashboardParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider DashboardInitParameters `json:"initProvider,omitempty"`
}

// DashboardStatus defines the observed state of Dashboard.
type DashboardStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DashboardObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Dashboard is the Schema for the Dashboards API. Create and manage dashboards in New Relic One.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,newrelic}
type Dashboard struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.page) || (has(self.initProvider) && has(self.initProvider.page))",message="spec.forProvider.page is a required parameter"
	Spec   DashboardSpec   `json:"spec"`
	Status DashboardStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DashboardList contains a list of Dashboards
type DashboardList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Dashboard `json:"items"`
}

// Repository type metadata.
var (
	Dashboard_Kind             = "Dashboard"
	Dashboard_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Dashboard_Kind}.String()
	Dashboard_KindAPIVersion   = Dashboard_Kind + "." + CRDGroupVersion.String()
	Dashboard_GroupVersionKind = CRDGroupVersion.WithKind(Dashboard_Kind)
)

func init() {
	SchemeBuilder.Register(&Dashboard{}, &DashboardList{})
}
