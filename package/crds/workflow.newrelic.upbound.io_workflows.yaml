---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: workflows.workflow.newrelic.upbound.io
spec:
  group: workflow.newrelic.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - newrelic
    kind: Workflow
    listKind: WorkflowList
    plural: workflows
    singular: workflow
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Workflow is the Schema for the Workflows API. Create and manage
          a workflow in New Relic.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: WorkflowSpec defines the desired state of Workflow
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accountId:
                    description: |-
                      Determines the New Relic account in which the workflow is created. Defaults to the account defined in the provider section.
                      The account id of the workflow.
                    type: number
                  destination:
                    description: |-
                      Notification configuration. See Nested destination blocks below for details.
                      Workflow's destination configuration.
                    items:
                      properties:
                        channelId:
                          description: |-
                            Id of a notification_channel to use for notifications. Please note that you have to use a
                            notification channel, not an alert_channel.
                            (Required) Destination's channel id.
                          type: string
                        channelIdRef:
                          description: Reference to a Channel in alert to populate
                            channelId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        channelIdSelector:
                          description: Selector for a Channel in alert to populate
                            channelId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        notificationTriggers:
                          description: |-
                            Issue events to notify on. The value is a list of possible issue events. See Notification Triggers below for details.
                            List of triggers to notify about in this destination configuration.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  destinationsEnabled:
                    description: |-
                      DEPRECATED Whether destinations are enabled. Please use enabled instead:
                      these two are different flags, but they are functionally identical. Defaults to true.
                      Indicates whether the destinations are enabled.
                    type: boolean
                  enabled:
                    description: |-
                      Whether workflow is enabled. Defaults to true.
                      Indicates whether the workflow is enabled.
                    type: boolean
                  enrichments:
                    description: |-
                      Workflow's enrichments. See Nested enrichments blocks below for details.
                      Enrichments can give additional context on alert notifications by adding NRQL query results to them.
                    items:
                      properties:
                        nrql:
                          description: |-
                            a wrapper block
                            (Required) Nrql type Enrichments.
                          items:
                            properties:
                              configuration:
                                description: |-
                                  Another wrapper block
                                  A set of key-value pairs to represent a enrichment configuration.
                                items:
                                  properties:
                                    query:
                                      description: |-
                                        An NRQL query to run
                                        enrichment's NRQL query
                                      type: string
                                  type: object
                                type: array
                              name:
                                description: |-
                                  The name of the workflow.
                                  (Required) Enrichment's name.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  enrichmentsEnabled:
                    description: |-
                      Whether enrichments are enabled. Defaults to true.
                      Indicates whether the enrichments are enabled.
                    type: boolean
                  issuesFilter:
                    description: A filter used to identify issues handled by this
                      workflow. See Nested issues_filter blocks below for details.
                    items:
                      properties:
                        name:
                          description: |-
                            The name of the filter. It can't be empty.
                            (Required) Filter's name.
                          type: string
                        predicate:
                          description: A condition an issue event should satisfy to
                            be processed by the workflow
                          items:
                            properties:
                              attribute:
                                description: |-
                                  Issue event attribute to check
                                  (Required) predicate's attribute.
                                type: string
                              operator:
                                description: |-
                                  An operator to use to compare the attribute with the provided values, see supported operators below
                                  The type of the operator. One of: (CONTAINS, DOES_NOT_CONTAIN, DOES_NOT_EQUAL, DOES_NOT_EXACTLY_MATCH, ENDS_WITH, EQUAL, EXACTLY_MATCHES, GREATER_OR_EQUAL, GREATER_THAN, IS, IS_NOT, LESS_OR_EQUAL, LESS_THAN, STARTS_WITH).
                                type: string
                              values:
                                description: |-
                                  The attribute must match any of the values in this list
                                  List of predicate values.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        type:
                          description: |-
                            Type of the filter. Please just set this field to FILTER. The field is likely to be deprecated/removed in the near future.
                            (Required) The type of the filter. One of: (FILTER, VIEW).
                          type: string
                      type: object
                    type: array
                  mutingRulesHandling:
                    description: |-
                      How to handle muted issues. See Muting Rules below for details.
                      The type of the muting rule handling. One of: (NOTIFY_ALL_ISSUES, DONT_NOTIFY_FULLY_MUTED_ISSUES, DONT_NOTIFY_FULLY_OR_PARTIALLY_MUTED_ISSUES).
                    type: string
                  name:
                    description: |-
                      The name of the workflow.
                      (Required) The name of the workflow.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  accountId:
                    description: |-
                      Determines the New Relic account in which the workflow is created. Defaults to the account defined in the provider section.
                      The account id of the workflow.
                    type: number
                  destination:
                    description: |-
                      Notification configuration. See Nested destination blocks below for details.
                      Workflow's destination configuration.
                    items:
                      properties:
                        channelId:
                          description: |-
                            Id of a notification_channel to use for notifications. Please note that you have to use a
                            notification channel, not an alert_channel.
                            (Required) Destination's channel id.
                          type: string
                        channelIdRef:
                          description: Reference to a Channel in alert to populate
                            channelId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        channelIdSelector:
                          description: Selector for a Channel in alert to populate
                            channelId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        notificationTriggers:
                          description: |-
                            Issue events to notify on. The value is a list of possible issue events. See Notification Triggers below for details.
                            List of triggers to notify about in this destination configuration.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  destinationsEnabled:
                    description: |-
                      DEPRECATED Whether destinations are enabled. Please use enabled instead:
                      these two are different flags, but they are functionally identical. Defaults to true.
                      Indicates whether the destinations are enabled.
                    type: boolean
                  enabled:
                    description: |-
                      Whether workflow is enabled. Defaults to true.
                      Indicates whether the workflow is enabled.
                    type: boolean
                  enrichments:
                    description: |-
                      Workflow's enrichments. See Nested enrichments blocks below for details.
                      Enrichments can give additional context on alert notifications by adding NRQL query results to them.
                    items:
                      properties:
                        nrql:
                          description: |-
                            a wrapper block
                            (Required) Nrql type Enrichments.
                          items:
                            properties:
                              configuration:
                                description: |-
                                  Another wrapper block
                                  A set of key-value pairs to represent a enrichment configuration.
                                items:
                                  properties:
                                    query:
                                      description: |-
                                        An NRQL query to run
                                        enrichment's NRQL query
                                      type: string
                                  type: object
                                type: array
                              name:
                                description: |-
                                  The name of the workflow.
                                  (Required) Enrichment's name.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  enrichmentsEnabled:
                    description: |-
                      Whether enrichments are enabled. Defaults to true.
                      Indicates whether the enrichments are enabled.
                    type: boolean
                  issuesFilter:
                    description: A filter used to identify issues handled by this
                      workflow. See Nested issues_filter blocks below for details.
                    items:
                      properties:
                        name:
                          description: |-
                            The name of the filter. It can't be empty.
                            (Required) Filter's name.
                          type: string
                        predicate:
                          description: A condition an issue event should satisfy to
                            be processed by the workflow
                          items:
                            properties:
                              attribute:
                                description: |-
                                  Issue event attribute to check
                                  (Required) predicate's attribute.
                                type: string
                              operator:
                                description: |-
                                  An operator to use to compare the attribute with the provided values, see supported operators below
                                  The type of the operator. One of: (CONTAINS, DOES_NOT_CONTAIN, DOES_NOT_EQUAL, DOES_NOT_EXACTLY_MATCH, ENDS_WITH, EQUAL, EXACTLY_MATCHES, GREATER_OR_EQUAL, GREATER_THAN, IS, IS_NOT, LESS_OR_EQUAL, LESS_THAN, STARTS_WITH).
                                type: string
                              values:
                                description: |-
                                  The attribute must match any of the values in this list
                                  List of predicate values.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        type:
                          description: |-
                            Type of the filter. Please just set this field to FILTER. The field is likely to be deprecated/removed in the near future.
                            (Required) The type of the filter. One of: (FILTER, VIEW).
                          type: string
                      type: object
                    type: array
                  mutingRulesHandling:
                    description: |-
                      How to handle muted issues. See Muting Rules below for details.
                      The type of the muting rule handling. One of: (NOTIFY_ALL_ISSUES, DONT_NOTIFY_FULLY_MUTED_ISSUES, DONT_NOTIFY_FULLY_OR_PARTIALLY_MUTED_ISSUES).
                    type: string
                  name:
                    description: |-
                      The name of the workflow.
                      (Required) The name of the workflow.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.destination is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.destination)
                || (has(self.initProvider) && has(self.initProvider.destination))'
            - message: spec.forProvider.issuesFilter is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.issuesFilter)
                || (has(self.initProvider) && has(self.initProvider.issuesFilter))'
            - message: spec.forProvider.mutingRulesHandling is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.mutingRulesHandling)
                || (has(self.initProvider) && has(self.initProvider.mutingRulesHandling))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: WorkflowStatus defines the observed state of Workflow.
            properties:
              atProvider:
                properties:
                  accountId:
                    description: |-
                      Determines the New Relic account in which the workflow is created. Defaults to the account defined in the provider section.
                      The account id of the workflow.
                    type: number
                  destination:
                    description: |-
                      Notification configuration. See Nested destination blocks below for details.
                      Workflow's destination configuration.
                    items:
                      properties:
                        channelId:
                          description: |-
                            Id of a notification_channel to use for notifications. Please note that you have to use a
                            notification channel, not an alert_channel.
                            (Required) Destination's channel id.
                          type: string
                        name:
                          description: |-
                            The name of the workflow.
                            (Required) Destination's name.
                          type: string
                        notificationTriggers:
                          description: |-
                            Issue events to notify on. The value is a list of possible issue events. See Notification Triggers below for details.
                            List of triggers to notify about in this destination configuration.
                          items:
                            type: string
                          type: array
                        type:
                          description: |-
                            Type of the filter. Please just set this field to FILTER. The field is likely to be deprecated/removed in the near future.
                            (Required) The type of the destination. One of: (EMAIL, EVENT_BRIDGE, PAGERDUTY_ACCOUNT_INTEGRATION, PAGERDUTY_SERVICE_INTEGRATION, SERVICE_NOW, WEBHOOK, MOBILE_PUSH, SLACK, JIRA).
                          type: string
                      type: object
                    type: array
                  destinationsEnabled:
                    description: |-
                      DEPRECATED Whether destinations are enabled. Please use enabled instead:
                      these two are different flags, but they are functionally identical. Defaults to true.
                      Indicates whether the destinations are enabled.
                    type: boolean
                  enabled:
                    description: |-
                      Whether workflow is enabled. Defaults to true.
                      Indicates whether the workflow is enabled.
                    type: boolean
                  enrichments:
                    description: |-
                      Workflow's enrichments. See Nested enrichments blocks below for details.
                      Enrichments can give additional context on alert notifications by adding NRQL query results to them.
                    items:
                      properties:
                        nrql:
                          description: |-
                            a wrapper block
                            (Required) Nrql type Enrichments.
                          items:
                            properties:
                              accountId:
                                description: |-
                                  Determines the New Relic account in which the workflow is created. Defaults to the account defined in the provider section.
                                  The account id of the enrichment.
                                type: number
                              configuration:
                                description: |-
                                  Another wrapper block
                                  A set of key-value pairs to represent a enrichment configuration.
                                items:
                                  properties:
                                    query:
                                      description: |-
                                        An NRQL query to run
                                        enrichment's NRQL query
                                      type: string
                                  type: object
                                type: array
                              enrichmentId:
                                description: |-
                                  The ID of the workflow.
                                  Enrichment's id.
                                type: string
                              name:
                                description: |-
                                  The name of the workflow.
                                  (Required) Enrichment's name.
                                type: string
                              type:
                                description: |-
                                  Type of the filter. Please just set this field to FILTER. The field is likely to be deprecated/removed in the near future.
                                  The type of the enrichment. One of: (NRQL).
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  enrichmentsEnabled:
                    description: |-
                      Whether enrichments are enabled. Defaults to true.
                      Indicates whether the enrichments are enabled.
                    type: boolean
                  guid:
                    description: |-
                      The ID of the workflow.
                      Workflow entity GUID
                    type: string
                  id:
                    description: The ID of the workflow.
                    type: string
                  issuesFilter:
                    description: A filter used to identify issues handled by this
                      workflow. See Nested issues_filter blocks below for details.
                    items:
                      properties:
                        filterId:
                          description: |-
                            The ID of the workflow.
                            filter id.
                          type: string
                        name:
                          description: |-
                            The name of the filter. It can't be empty.
                            (Required) Filter's name.
                          type: string
                        predicate:
                          description: A condition an issue event should satisfy to
                            be processed by the workflow
                          items:
                            properties:
                              attribute:
                                description: |-
                                  Issue event attribute to check
                                  (Required) predicate's attribute.
                                type: string
                              operator:
                                description: |-
                                  An operator to use to compare the attribute with the provided values, see supported operators below
                                  The type of the operator. One of: (CONTAINS, DOES_NOT_CONTAIN, DOES_NOT_EQUAL, DOES_NOT_EXACTLY_MATCH, ENDS_WITH, EQUAL, EXACTLY_MATCHES, GREATER_OR_EQUAL, GREATER_THAN, IS, IS_NOT, LESS_OR_EQUAL, LESS_THAN, STARTS_WITH).
                                type: string
                              values:
                                description: |-
                                  The attribute must match any of the values in this list
                                  List of predicate values.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        type:
                          description: |-
                            Type of the filter. Please just set this field to FILTER. The field is likely to be deprecated/removed in the near future.
                            (Required) The type of the filter. One of: (FILTER, VIEW).
                          type: string
                      type: object
                    type: array
                  lastRun:
                    description: The last time notification was sent for this workflow.
                    type: string
                  mutingRulesHandling:
                    description: |-
                      How to handle muted issues. See Muting Rules below for details.
                      The type of the muting rule handling. One of: (NOTIFY_ALL_ISSUES, DONT_NOTIFY_FULLY_MUTED_ISSUES, DONT_NOTIFY_FULLY_OR_PARTIALLY_MUTED_ISSUES).
                    type: string
                  name:
                    description: |-
                      The name of the workflow.
                      (Required) The name of the workflow.
                    type: string
                  workflowId:
                    description: |-
                      The ID of the workflow.
                      The id of the workflow.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
